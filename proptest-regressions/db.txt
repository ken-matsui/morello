# Seeds for failure cases proptest has generated in the past. It is
# automatically read and these particular cases re-run before any
# novel cases are generated.
#
# It is recommended to check this file in to source control so that
# everyone who runs the test benefits from these saved cases.
cc 64d0fcb6a2c17ea590bb632e5a666c32467cbc2526e24765791096c84de593e0 # shrinks to pair = (Spec(Primitive(PrimitiveBasics { typ: Move, spec_shape: [1, 3], dtype: Uint32 }, [TensorSpecAux { contig: 0, aligned: false, level: RF, layout: Standard { dim_order: [0, 1] }, vector_size: None }, TensorSpecAux { contig: 0, aligned: false, level: RF, layout: Standard { dim_order: [0, 1] }, vector_size: None }], true), Standard(MemVec([64, 1024, 32768, 1073741824]))), 8485, Cost { main: 10486028143885309824, peaks: MemVec([633498218893753742, 13640117026350596940, 17946800389929967412, 2616234952633078948]), depth: 1190664964 })
cc 800e1ced778429385bae497b9509ff1aa027924fdd88ea1ae411fca1cc3eea1c # shrinks to start = 0, extent = 1, block_dim_size = 1
cc 80870b6ce7a00010e55b5e6d0ef23620e37175a0eb2143f219c689a65d8361a2 # shrinks to start = 2, extent = 3, block_dim_size = 2
cc e522036a26d6b1844096682dcb49d19921c743ffbe8d56b5171b9fdd993596f1 # shrinks to entry_pair = ((Spec(Primitive(PrimitiveBasics { typ: Move, spec_shape: [7], dtype: Uint32 }, [TensorSpecAux { contig: 1, aligned: false, level: VRF, layout: Standard { dim_order: [0] }, vector_size: Some(16) }, TensorSpecAux { contig: 1, aligned: true, level: RF, layout: Standard { dim_order: [0] }, vector_size: None }], false), Standard(MemVec([4, 3, 8, 7]))), 0, Cost { main: 7, peaks: MemVec([0, 0, 0, 1]), depth: 112 }), (Spec(Primitive(PrimitiveBasics { typ: Move, spec_shape: [7], dtype: Uint32 }, [TensorSpecAux { contig: 1, aligned: false, level: VRF, layout: Standard { dim_order: [0] }, vector_size: Some(16) }, TensorSpecAux { contig: 1, aligned: true, level: RF, layout: Standard { dim_order: [0] }, vector_size: None }], false), Standard(MemVec([0, 0, 0, 0]))), 0, Cost { main: 7, peaks: MemVec([0, 0, 0, 0]), depth: 112 }))
cc 1c6d43300c3f7599316edbe96c1a2cb6afe40c7b5162dac562c7b865d7d00a70 # shrinks to entry = (Spec(Primitive(PrimitiveBasics { typ: Conv { accum: true }, spec_shape: [4, 5, 2, 1, 5, 1, 5], dtype: Uint32 }, [TensorSpecAux { contig: 1, aligned: true, level: VRF, layout: Standard { dim_order: [0, 1, 2, 3] }, vector_size: Some(32) }, TensorSpecAux { contig: 4, aligned: false, level: GL, layout: Standard { dim_order: [0, 1, 2, 3] }, vector_size: None }, TensorSpecAux { contig: 1, aligned: false, level: L1, layout: Standard { dim_order: [0, 1, 2, 3] }, vector_size: None }], true), Standard(MemVec([5, 0, 3, 18]))), [])
cc ce702906ea65691d668cbf378427006cbc513edc2fb3816b518b638ff7ebb1ea # shrinks to entry = (Spec(Primitive(PrimitiveBasics { typ: Conv { accum: true }, spec_shape: [1, 2, 1, 1, 2, 1, 2], dtype: Uint32 }, [TensorSpecAux { contig: 0, aligned: false, level: RF, layout: Standard { dim_order: [0, 1, 2, 3] }, vector_size: None }, TensorSpecAux { contig: 0, aligned: false, level: RF, layout: Standard { dim_order: [0, 1, 2, 3] }, vector_size: None }, TensorSpecAux { contig: 0, aligned: false, level: VRF, layout: Standard { dim_order: [0, 1, 2, 3] }, vector_size: Some(16) }], false), Standard(MemVec([5, 5, 4, 4]))), [])
cc 62c9cecafb1bcb5c1df156e1fc4df35fd4e2f756eac0e53a6a0c2b31aa76a468 # shrinks to entry = (Spec(Primitive(PrimitiveBasics { typ: Conv { accum: true }, spec_shape: [5, 2, 3, 6, 8, 5, 8], dtype: Uint32 }, [TensorSpecAux { contig: 0, aligned: false, level: GL, layout: Packed { dim_count: 4, strip_dim: 0, strip_size: 4 }, vector_size: None }, TensorSpecAux { contig: 5, aligned: false, level: L1, layout: Packed { dim_count: 4, strip_dim: 2, strip_size: 2 }, vector_size: None }, TensorSpecAux { contig: 1, aligned: true, level: GL, layout: Standard { dim_order: [0, 1, 2, 3] }, vector_size: None }], true), Standard(MemVec([1, 0, 10, 11]))), [(0, Cost { main: 3167, peaks: MemVec([0, 0, 0, 0]), depth: 53 })])
cc fbe51b0f4caeb2573d642c616e066b24eea24dfa1b6fc04d99a079a47fd16cd7 # shrinks to entry_pair = ((Spec(Primitive(PrimitiveBasics { typ: Conv { accum: true }, spec_shape: [7, 6, 3, 3, 6, 3, 3], dtype: Uint8 }, [TensorSpecAux { contig: 1, aligned: true, level: VRF, layout: Packed { dim_count: 4, strip_dim: 1, strip_size: 2 }, vector_size: Some(16) }, TensorSpecAux { contig: 3, aligned: true, level: VRF, layout: Standard { dim_order: [0, 2, 3, 1] }, vector_size: Some(32) }, TensorSpecAux { contig: 0, aligned: false, level: GL, layout: Standard { dim_order: [0, 1, 2, 3] }, vector_size: None }], false), Standard(MemVec([5, 2, 6, 20]))), 0, Cost { main: 1648582921, peaks: MemVec([0, 0, 0, 0]), depth: 144 }), (Spec(Primitive(PrimitiveBasics { typ: Conv { accum: true }, spec_shape: [7, 6, 3, 3, 6, 3, 3], dtype: Uint8 }, [TensorSpecAux { contig: 1, aligned: true, level: VRF, layout: Packed { dim_count: 4, strip_dim: 1, strip_size: 2 }, vector_size: Some(16) }, TensorSpecAux { contig: 3, aligned: true, level: VRF, layout: Standard { dim_order: [0, 2, 3, 1] }, vector_size: Some(32) }, TensorSpecAux { contig: 0, aligned: false, level: GL, layout: Standard { dim_order: [0, 1, 2, 3] }, vector_size: None }], false), Standard(MemVec([0, 0, 6, 16]))), 0, Cost { main: 1648582921, peaks: MemVec([0, 0, 1, 0]), depth: 144 }))
cc cd839e09066ca53d6c400cda0dc8a37caef853368cf5c95c6e2b7d65aaef183b # shrinks to decision_pair = (Decision { spec: Spec(Primitive(PrimitiveBasics { typ: Move, spec_shape: [3], dtype: Uint32 }, [TensorSpecAux { contig: 1, aligned: true, level: RF, layout: Standard { dim_order: [0] }, vector_size: None }, TensorSpecAux { contig: 0, aligned: false, level: L1, layout: Standard { dim_order: [0] }, vector_size: None }], true), Standard(MemVec([7, 8, 3, 22]))), actions_costs: [(2, Cost { main: 158, peaks: MemVec([7, 0, 0, 0]), depth: 7 })], children: [Decision { spec: Spec(Primitive(PrimitiveBasics { typ: Move, spec_shape: [3], dtype: Uint32 }, [TensorSpecAux { contig: 1, aligned: true, level: RF, layout: Standard { dim_order: [0] }, vector_size: None }, TensorSpecAux { contig: 1, aligned: true, level: RF, layout: Standard { dim_order: [0] }, vector_size: None }], true), Standard(MemVec([6, 8, 3, 22]))), actions_costs: [(0, Cost { main: 3, peaks: MemVec([0, 0, 0, 0]), depth: 2 })], children: [Decision { spec: Spec(Primitive(PrimitiveBasics { typ: Move, spec_shape: [1], dtype: Uint32 }, [TensorSpecAux { contig: 1, aligned: false, level: RF, layout: Standard { dim_order: [0] }, vector_size: None }, TensorSpecAux { contig: 1, aligned: false, level: RF, layout: Standard { dim_order: [0] }, vector_size: None }], true), Standard(MemVec([6, 8, 3, 22]))), actions_costs: [(0, Cost { main: 1, peaks: MemVec([0, 0, 0, 0]), depth: 1 })], children: [] }] }, Decision { spec: Spec(Primitive(PrimitiveBasics { typ: Move, spec_shape: [3], dtype: Uint32 }, [TensorSpecAux { contig: 1, aligned: true, level: RF, layout: Standard { dim_order: [0] }, vector_size: None }, TensorSpecAux { contig: 0, aligned: false, level: L1, layout: Standard { dim_order: [0] }, vector_size: None }], true), Standard(MemVec([6, 8, 3, 22]))), actions_costs: [(0, Cost { main: 135, peaks: MemVec([6, 0, 0, 0]), depth: 6 })], children: [Decision { spec: Spec(Primitive(PrimitiveBasics { typ: Move, spec_shape: [1], dtype: Uint32 }, [TensorSpecAux { contig: 1, aligned: false, level: RF, layout: Standard { dim_order: [0] }, vector_size: None }, TensorSpecAux { contig: 1, aligned: false, level: L1, layout: Standard { dim_order: [0] }, vector_size: None }], true), Standard(MemVec([6, 8, 3, 22]))), actions_costs: [(0, Cost { main: 45, peaks: MemVec([6, 0, 0, 0]), depth: 5 })], children: [Decision { spec: Spec(Primitive(PrimitiveBasics { typ: Move, spec_shape: [1], dtype: Uint32 }, [TensorSpecAux { contig: 1, aligned: false, level: RF, layout: Standard { dim_order: [0] }, vector_size: None }, TensorSpecAux { contig: 1, aligned: true, level: RF, layout: Standard { dim_order: [0] }, vector_size: None }], true), Standard(MemVec([5, 8, 3, 22]))), actions_costs: [(0, Cost { main: 1, peaks: MemVec([0, 0, 0, 0]), depth: 1 })], children: [] }, Decision { spec: Spec(Primitive(PrimitiveBasics { typ: Move, spec_shape: [1], dtype: Uint32 }, [TensorSpecAux { contig: 1, aligned: true, level: RF, layout: Standard { dim_order: [0] }, vector_size: None }, TensorSpecAux { contig: 1, aligned: false, level: L1, layout: Standard { dim_order: [0] }, vector_size: None }], true), Standard(MemVec([5, 8, 3, 22]))), actions_costs: [(0, Cost { main: 34, peaks: MemVec([5, 0, 0, 0]), depth: 4 })], children: [Decision { spec: Spec(Primitive(PrimitiveBasics { typ: Move, spec_shape: [1], dtype: Uint32 }, [TensorSpecAux { contig: 1, aligned: true, level: RF, layout: Standard { dim_order: [0] }, vector_size: None }, TensorSpecAux { contig: 1, aligned: true, level: RF, layout: Standard { dim_order: [0] }, vector_size: None }], true), Standard(MemVec([4, 8, 3, 22]))), actions_costs: [(0, Cost { main: 1, peaks: MemVec([0, 0, 0, 0]), depth: 1 })], children: [] }, Decision { spec: Spec(Primitive(PrimitiveBasics { typ: Move, spec_shape: [1], dtype: Uint32 }, [TensorSpecAux { contig: 1, aligned: true, level: RF, layout: Standard { dim_order: [0] }, vector_size: None }, TensorSpecAux { contig: 1, aligned: false, level: L1, layout: Standard { dim_order: [0] }, vector_size: None }], true), Standard(MemVec([4, 8, 3, 22]))), actions_costs: [(0, Cost { main: 23, peaks: MemVec([4, 0, 0, 0]), depth: 3 })], children: [Decision { spec: Spec(Primitive(PrimitiveBasics { typ: Move, spec_shape: [1], dtype: Uint32 }, [TensorSpecAux { contig: 1, aligned: true, level: RF, layout: Standard { dim_order: [0] }, vector_size: None }, TensorSpecAux { contig: 1, aligned: true, level: RF, layout: Standard { dim_order: [0] }, vector_size: None }], true), Standard(MemVec([3, 8, 3, 22]))), actions_costs: [(0, Cost { main: 1, peaks: MemVec([0, 0, 0, 0]), depth: 1 })], children: [] }, Decision { spec: Spec(Primitive(PrimitiveBasics { typ: Move, spec_shape: [1], dtype: Uint32 }, [TensorSpecAux { contig: 1, aligned: true, level: RF, layout: Standard { dim_order: [0] }, vector_size: None }, TensorSpecAux { contig: 1, aligned: false, level: L1, layout: Standard { dim_order: [0] }, vector_size: None }], true), Standard(MemVec([3, 8, 3, 22]))), actions_costs: [(0, Cost { main: 12, peaks: MemVec([3, 0, 0, 0]), depth: 2 })], children: [Decision { spec: Spec(Primitive(PrimitiveBasics { typ: Move, spec_shape: [1], dtype: Uint32 }, [TensorSpecAux { contig: 1, aligned: true, level: RF, layout: Standard { dim_order: [0] }, vector_size: None }, TensorSpecAux { contig: 1, aligned: true, level: RF, layout: Standard { dim_order: [0] }, vector_size: None }], true), Standard(MemVec([0, 8, 3, 22]))), actions_costs: [(0, Cost { main: 1, peaks: MemVec([0, 0, 0, 0]), depth: 1 })], children: [] }, Decision { spec: Spec(Primitive(PrimitiveBasics { typ: Move, spec_shape: [1], dtype: Uint32 }, [TensorSpecAux { contig: 1, aligned: true, level: RF, layout: Standard { dim_order: [0] }, vector_size: None }, TensorSpecAux { contig: 1, aligned: false, level: L1, layout: Standard { dim_order: [0] }, vector_size: None }], true), Standard(MemVec([0, 8, 3, 22]))), actions_costs: [(1, Cost { main: 1, peaks: MemVec([0, 0, 0, 0]), depth: 1 })], children: [] }] }] }] }] }] }] }, Decision { spec: Spec(Primitive(PrimitiveBasics { typ: Move, spec_shape: [3], dtype: Uint32 }, [TensorSpecAux { contig: 1, aligned: true, level: RF, layout: Standard { dim_order: [0] }, vector_size: None }, TensorSpecAux { contig: 0, aligned: false, level: L1, layout: Standard { dim_order: [0] }, vector_size: None }], true), Standard(MemVec([0, 0, 0, 0]))), actions_costs: [(0, Cost { main: 3, peaks: MemVec([0, 0, 0, 0]), depth: 2 })], children: [Decision { spec: Spec(Primitive(PrimitiveBasics { typ: Move, spec_shape: [1], dtype: Uint32 }, [TensorSpecAux { contig: 1, aligned: false, level: RF, layout: Standard { dim_order: [0] }, vector_size: None }, TensorSpecAux { contig: 1, aligned: false, level: L1, layout: Standard { dim_order: [0] }, vector_size: None }], true), Standard(MemVec([0, 0, 0, 0]))), actions_costs: [(1, Cost { main: 1, peaks: MemVec([0, 0, 0, 0]), depth: 1 })], children: [] }] })
