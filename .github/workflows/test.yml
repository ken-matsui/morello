name: Run tests and benchmarks
on:
  - push
  - pull_request
env:
  DOCKER_BUILDKIT: 1
  DOCKER_IMAGE_NAME: morello-img-${{ github.sha }}
  DOCKER_IMAGE_TAG: morello-${{ github.sha }}
  DOCKER_IMAGE_PATH: image.tar.gz  # TODO: Use home directory instead.
jobs:
  build-img:
    runs-on: ubuntu-latest
    env:
      HEXAGON_SDK_BUCKET: morello-build-assets-1
      HEXAGON_SDK_FILENAME: hexagon_sdk_lnx_3_5_installer_00006_1.zip
    timeout-minutes: 75
    steps:
      - name: Check out repository code
        uses: actions/checkout@v2
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.BUILD_ASSETS_AWS_USER_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.BUILD_ASSETS_AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Cache Hexagon SDK
        uses: actions/cache@v2
        id: cache-hexagon-sdk
        with:
          path: ${{ env.HEXAGON_SDK_FILENAME }}
          key: ${{ env.HEXAGON_SDK_FILENAME }}
      - name: Download Hexagon SDK
        if: steps.cache-hexagon-sdk.outputs.cache-hit != 'true'
        run: |
          aws s3 cp "s3://$HEXAGON_SDK_BUCKET/$HEXAGON_SDK_FILENAME" "$HEXAGON_SDK_FILENAME" --no-progress
      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      - name: Build Docker image
        run: |
          docker buildx build --tag "$DOCKER_IMAGE_TAG" --cache-from type=local,src=/tmp/buildx-cache --cache-to type=local,dest=/tmp/buildx-cache-new -o type=docker,dest=- . | gzip > "$DOCKER_IMAGE_PATH" # TODO: Don't use /tmp
      # Fix for https://github.com/docker/build-push-action/issues/252
      - name: Move Docker cache
        run: |
          rm -rf /tmp/buildx-cache
          mv /tmp/buildx-cache-new /tmp/buildx-cache
      - name: Upload Docker image as an artifact
        uses: actions/upload-artifact@v2
        with:
          name: ${{ env.DOCKER_IMAGE_NAME }}
          path: ${{ env.DOCKER_IMAGE_PATH }}
          retention-days: 1
  test:
    needs: build-img
    runs-on: ubuntu-latest
    timeout-minutes: 180
    steps:
      - name: Download the Docker image
        uses: actions/download-artifact@v2
        with:
          name: ${{ env.DOCKER_IMAGE_NAME }}
      - name: Load the image
        run: |
          docker load -i "$DOCKER_IMAGE_PATH"
      - name: Run tests
        run: |
          docker run --rm -t "$DOCKER_IMAGE_TAG" pytest -n auto
  bench:
    needs: build-img
    runs-on: ubuntu-latest
    timeout-minutes: 240
    strategy:
      matrix:
        spec: ["matmul", "gemm3", "conv"]
    steps:
      - name: Download the Docker image
        uses: actions/download-artifact@v2
        with:
          name: ${{ env.DOCKER_IMAGE_NAME }}
      - name: Load the image
        run: |
          docker load -i "$DOCKER_IMAGE_PATH"
      - name: Run benchmarks
        run: |
          docker run --rm -t  -v ~/container_out:/out "$DOCKER_IMAGE_TAG" scripts/bench_compare.py --target=cpu --db_path=/out/samples.db --cache=/out/cache.pkl --best --numpy "$SPEC" 128 192 256 384 512 768
          chmod -R ugo+r ~/container_out
        env:
          SPEC: ${{ matrix.spec }}
      - name: Upload samples.db as artifact
        uses: actions/upload-artifact@v2
        with:
          name: bench-${{ matrix.spec }}-samples
          path: ~/container_out/samples.db
          retention-days: 30
      - name: Upload scheduling cache as artifact
        uses: actions/upload-artifact@v2
        with:
          name: bench-${{ matrix.spec }}-cache
          path: ~/container_out/cache.pkl
          retention-days: 14
